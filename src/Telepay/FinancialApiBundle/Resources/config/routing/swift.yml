######################## COMBO SERVICES ########################

make_swift:
    pattern:  /swift/v{version_number}/{type_in}/{type_out}
    defaults: { _controller: Telepay\FinancialApiBundle\Controller\Transactions\SwiftController::make ,_format: ~}
    requirements:
        _method: POST
        type_in: "[a-z0-9_]+"
        type_out: "[a-z0-9_]+"

check_swift:
    pattern:  /swift/v{version_number}/{type_in}/{type_out}/{id}
    defaults: { _controller: Telepay\FinancialApiBundle\Controller\Transactions\SwiftController::check ,_format: ~}
    requirements:
        _method: GET
        type_in: "[a-z0-9_]+"
        type_out: "[a-z0-9_]+"

update_swift:
    pattern:  /swift/v{version_number}/{type_in}/{type_out}/{id}
    defaults: { _controller: Telepay\FinancialApiBundle\Controller\Transactions\SwiftController::update ,_format: ~}
    requirements:
        _method: PUT
        type_in: "[a-z0-9_]+"
        type_out: "[a-z0-9_]+"

hello_swift:
    pattern:  /swift/v{version_number}/hello/{currency}/
    defaults: { _controller: Telepay\FinancialApiBundle\Controller\Transactions\SwiftController::hello ,_format: ~}
    requirements:
        _method: GET




#service_call_create:
#    pattern:  /services/v{version_number}/{service_cname}
#    defaults: { _controller: Telepay\FinancialApiBundle\Controller\Transactions\IncomingController::make, _format: ~ }
#    requirements:
#        _method: POST
#        service_cname: "[a-z0-9_]+"


###########################  OLD SERVICES ########################

old_btc_halcash:
    pattern:  /api/send
    defaults: { _controller: Telepay\FinancialApiBundle\Controller\Transactions\AdapterController::make ,_format: ~ ,type_in: 'btc' ,type_out: 'halcash'}
    requirements:
        _method: POST

old_btc_halcash_check:
    pattern:  /api/send/{id}
    defaults: { _controller: Telepay\FinancialApiBundle\Controller\Transactions\AdapterController::check ,_format: ~ ,type_in: 'btc' ,type_out: 'halcash', version_number: '1'}
    requirements:
        _method: GET

old_fac_halcash:
    pattern:  /api/fac/send
    defaults: { _controller: Telepay\FinancialApiBundle\Controller\Transactions\AdapterController::make ,_format: ~ ,type_in: 'fac' ,type_out: 'halcash'}
    requirements:
        _method: POST

old_btc_halcash_check:
    pattern:  /api/fac/send/{id}
    defaults: { _controller: Telepay\FinancialApiBundle\Controller\Transactions\AdapterController::check ,_format: ~ ,type_in: 'fac' ,type_out: 'halcash', version_number: '1'}
    requirements:
        _method: GET

old_paynet_btc:
    pattern:  /api/paynet/btc
    defaults: { _controller: Telepay\FinancialApiBundle\Controller\Transactions\AdapterController::make ,_format: ~ ,type_in: 'paynet' ,type_out: 'btc'}
    requirements:
        _method: POST

old_paynet_btc_check:
    pattern:  /api/paynet/btc/{id}
    defaults: { _controller: Telepay\FinancialApiBundle\Controller\Transactions\AdapterController::check ,_format: ~ ,type_in: 'paynet' ,type_out: 'btc', version_number: '1'}
    requirements:
        _method: GET

old_paynet_btc:
    pattern:  /api/fac/paynet
    defaults: { _controller: Telepay\FinancialApiBundle\Controller\Transactions\AdapterController::make ,_format: ~ ,type_in: 'paynet' ,type_out: 'fac'}
    requirements:
        _method: POST

old_paynet_fac_check:
    pattern:  /api/fac/paynet/{id}
    defaults: { _controller: Telepay\FinancialApiBundle\Controller\Transactions\AdapterController::check ,_format: ~ ,type_in: 'paynet' ,type_out: 'fac', version_number: '1'}
    requirements:
        _method: GET

old_btc_bank_transfer:
    pattern:  /api/btc/bank_transfer
    defaults: { _controller: Telepay\FinancialApiBundle\Controller\Transactions\AdapterController::make ,_format: ~ ,type_in: 'btc' ,type_out: 'bank_transfer'}
    requirements:
        _method: POST

old_btc_bank_transfer_check:
    pattern:  /api/btc/bank_transfer/{id}
    defaults: { _controller: Telepay\FinancialApiBundle\Controller\Transactions\AdapterController::check ,_format: ~ ,type_in: 'btc' ,type_out: 'bank_transfer', version_number: '1'}
    requirements:
        _method: GET

old_fac_bank_transfer:
    pattern:  /api/fac/bank_transfer
    defaults: { _controller: Telepay\FinancialApiBundle\Controller\Transactions\AdapterController::make ,_format: ~ ,type_in: 'fac' ,type_out: 'bank_transfer'}
    requirements:
        _method: POST

old_fac_bank_transfer_check:
    pattern:  /api/fac/bank_transfer/{id}
    defaults: { _controller: Telepay\FinancialApiBundle\Controller\Transactions\AdapterController::check ,_format: ~ ,type_in: 'fac' ,type_out: 'bank_transfer', version_number: '1'}
    requirements:
        _method: GET

old_btc_cryptocapital:
    pattern:  /api/btc/cryptocapital
    defaults: { _controller: Telepay\FinancialApiBundle\Controller\Transactions\AdapterController::make ,_format: ~ ,type_in: 'btc' ,type_out: 'cryptocapital'}
    requirements:
        _method: POST

old_btc_cryptocapital_check:
    pattern:  /api/btc/cryptocapital/{id}
    defaults: { _controller: Telepay\FinancialApiBundle\Controller\Transactions\AdapterController::check ,_format: ~ ,type_in: 'btc' ,type_out: 'cryptocapital', version_number: '1'}
    requirements:
        _method: GET

old_fac_cryptocapital:
    pattern:  /api/fac/cryptocapital
    defaults: { _controller: Telepay\FinancialApiBundle\Controller\Transactions\AdapterController::make ,_format: ~ ,type_in: 'fac' ,type_out: 'cryptocapital'}
    requirements:
        _method: POST

old_fac_cryptocapital_check:
    pattern:  /api/fac/cryptocapital/{id}
    defaults: { _controller: Telepay\FinancialApiBundle\Controller\Transactions\AdapterController::check ,_format: ~ ,type_in: 'fac' ,type_out: 'cryptocapital', version_number: '1'}
    requirements:
        _method: GET