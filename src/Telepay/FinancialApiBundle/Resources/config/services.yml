services:
    signature.security.authentication.provider:
        class: Telepay\FinancialApiBundle\Security\Authentication\Provider\SignatureAuthenticationProvider
        arguments: ["", "%kernel.cache_dir%/security/nonces"]

    signature.security.authentication.listener:
        class: Telepay\FinancialApiBundle\Security\Firewall\SignatureListener
        arguments: ["@security.context", "@security.authentication.manager","@service_container"]

    access_key.security.user_provider:
        class: Telepay\FinancialApiBundle\Security\AccessKeyUserProvider
        arguments: ["@fos_user.user_manager"]

    app.incoming_controller:
        class: Telepay\FinancialApiBundle\Controller\Transactions\IncomingController2
        calls:
            - [setContainer, ["@service_container"] ]

    notificator:
        class: Telepay\FinancialApiBundle\DependencyInjection\Transactions\Core\Notificator
        arguments:
            - "@service_container"

    command.check.posV2:
        class: Telepay\FinancialApiBundle\Command\CheckCryptoPOSv2Command
        calls:
            - [setContainer, ["@service_container"] ]

    command.delegate.payment:
        class: Telepay\FinancialApiBundle\Command\DelegatedExchangeCommand
        calls:
            - [setContainer, ["@service_container"] ]

    security.authentication.switchuser_listener:
        class: Telepay\FinancialApiBundle\Security\Firewall\SwitchUserListener
        public: false
        abstract: true
        tags:
            - { name: monolog.logger, channel: security }
        arguments:
           - @security.context
           - null
           - @security.user_checker
           - null
           - @security.access.decision_manager
           - @logger
           - su
           - ROLE_ALLOWED_TO_SWITCH
           - @event_dispatcher

    auth.logger:
        class:     Symfony\Bridge\Monolog\Logger
        arguments: [auth]
        calls:
            - [pushHandler, [@auth.logger_handler]]

    auth.logger_handler:
        class:     Monolog\Handler\StreamHandler
        arguments: [%kernel.logs_dir%/%kernel.environment%.auth.log, 200]

    transaction.logger:
        class:     Symfony\Bridge\Monolog\Logger
        arguments: [transaction]
        calls:
            - [pushHandler, [@transaction.logger_handler]]

    transaction.logger_handler:
        class:     Monolog\Handler\StreamHandler
        arguments: [%kernel.logs_dir%/%kernel.environment%.transaction.log, 200]

    manager.logger:
        class:     Symfony\Bridge\Monolog\Logger
        arguments: [manager]
        calls:
            - [pushHandler, [@manager.logger_handler]]

    manager.logger_handler:
        class:     Monolog\Handler\StreamHandler
        arguments: [%kernel.logs_dir%/%kernel.environment%.manager.log, 200]

    file_manager:
        class: Telepay\FinancialApiBundle\DependencyInjection\Telepay\Commons\UploadManager
        arguments: ['@service_container']

    kyc.listener:
        class: Telepay\FinancialApiBundle\EventListener\KycListener
        arguments: [@service_container]
        tags:
            - { name: doctrine.event_listener, event: preUpdate }
            - { name: doctrine.event_listener, event: postUpdate }
            - { name: doctrine.event_listener, event: postPersist }
            - { name: doctrine.event_listener, event: prePersist }

    transaction.listener:
        class: Telepay\FinancialApiBundle\EventListener\TransactionListener
        arguments: [@service_container, @net.telepay.commons.permissions_checker]
        tags:
            - { name: doctrine_mongodb.odm.event_listener, event: preUpdate }
            - { name: doctrine_mongodb.odm.event_listener, event: postUpdate }
            - { name: doctrine_mongodb.odm.event_listener, event: postPersist }
            - { name: doctrine_mongodb.odm.event_listener, event: prePersist }

    oauth_event_listener:
          class:  Telepay\FinancialApiBundle\EventListener\OAuthEventListener
          arguments: [@service_container]
          tags:
              - { name: kernel.event_listener, event: fos_oauth_server.pre_authorization_process, method: onPreAuthorizationProcess }
              - { name: kernel.event_listener, event: fos_oauth_server.post_authorization_process, method: onPostAuthorizationProcess }

    slik_dompdf:
          class: Slik\DompdfBundle\Wrapper\DompdfWrapper
          arguments: [%kernel.root_dir%]