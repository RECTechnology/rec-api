<?php

/**
 * Created by PhpStorm.
 * User: lluis
 * Date: 4/18/19
 * Time: 12:33 PM
 */

namespace Telepay\FinancialApiBundle\Controller\Management\Admin;

use DateTime;
use Doctrine\Common\Annotations\AnnotationException;
use FOS\RestBundle\Controller\Annotations as Rest;
use ReflectionException;
use Symfony\Component\HttpFoundation\Request;
use Symfony\Component\HttpFoundation\Response;
use Symfony\Component\HttpKernel\Exception\HttpException;
use Telepay\FinancialApiBundle\Controller\BaseApiController;
use Telepay\FinancialApiBundle\Entity\DelegatedChangeData;

/**
 * Class DelegatedChangeDataController
 * @package Telepay\FinancialApiBundle\Controller\Management\Admin
 */
class DelegatedChangeDataController extends BaseApiController{

    /**
     * @param Request $request
     * @return Response
     * @Rest\View
     */
    public function indexAction(Request $request)
    {
        return parent::indexAction($request); // TODO: Change the autogenerated stub
    }

    /**
     * @param Request $request
     * @return Response
     * @throws AnnotationException
     * @throws ReflectionException
     * @Rest\View
     */
    public function createAction(Request $request)
    {
        return parent::createAction($request);
    }

    /**
     * @param $id
     * @return Response
     * @Rest\View
     */
    public function showAction($id)
    {
        return parent::showAction($id); // TODO: Change the autogenerated stub
    }

    /**
     * @param Request $request
     * @param $id
     * @return Response
     * @throws AnnotationException
     * @throws ReflectionException
     * @Rest\View
     */
    public function updateAction(Request $request, $id) {
        return parent::updateAction($request, $id);
    }


    /**
     * @param $id
     * @return Response
     * @Rest\View
     */
    public function deleteAction($id)
    {
        return parent::deleteAction($id); // TODO: Change the autogenerated stub
    }


    /**
     * @param Request $request
     * @return Response
     * @throws AnnotationException
     * @throws ReflectionException
     * @Rest\View
     */
    public function loadCsvAction(Request $request){
        $user = $this->get('security.context')->getToken()->getUser();
        if(!$user->hasRole('ROLE_SUPER_ADMIN')) throw new HttpException(403, 'You don\'t have the necessary permissions');

        $row = 0;
        if($request->request->has('path')){
            $fileSrc=$request->request->get('path');
            $request->request->remove('path');
            $row = 1;
            if (($handle = fopen("".$fileSrc, "r")) !== FALSE) {
                while (($data = fgetcsv($handle, 1000, ",")) !== FALSE) {

                    $request->request->set('delegated_change', $data[0]);
                    $request->request->set('account', $data[1]);
                    $request->request->set('exchanger', $data[2]);
                    $request->request->set('pan', $data[3]);
                    $request->request->set('expiry_date', $data[4]);
                    $request->request->set('cvv2', $data[5]);
                    $request->request->set('amount', $data[6]);

                    try{
                        $this->createAction($request);
                    } catch (HttpException $e){
                        throw new HttpException(403,"Error on the row ".$row.": ".$e->getMessage());
                    }


                    $row++;
                }
                fclose($handle);
            }

        }
        return $this->restV2(200,"ok", "Added ".$row." rows successfuly");
    }



    function getRepositoryName() {
        return "TelepayFinancialApiBundle:DelegatedChangeData";
    }

    function getNewEntity() {
        return new DelegatedChangeData();
    }
}